service: ktt-backend

provider:
  name: aws
  runtime: nodejs10.x
  memorySize: 128
  stage: ${opt:stage,'dev'}
  region: us-east-2 # Ohio

  environment:
    APP_STAGE: ${self:provider.stage}
    AUTH_SECRET: ${file(./serverless-config/secrets.json):AUTH_SECRET}
    ADMIN_SECRET: ${file(./serverless-config/secrets.json):ADMIN_SECRET}
    MONGODB_URI: ${file(./serverless-config/secrets.json):MONGODB_URI}

  iamRoleStatements:
    - Effect: "Allow"
      Action:
        - "lambda:InvokeFunction"
      Resource: "*"

package:
  individually: true

  exclude:
    - "README.md"

functions:
  usersLogin:
    warmup: true
    handler: src/routes/users/login.default
    events:
      - http:
          path: users/login
          method: POST
          cors: true

  usersGetAll:
    warmup: true
    handler: src/routes/users/get-all.default
    events:
      - http:
          path: users
          method: GET
          cors: true

  usersUpdateOne:
    warmup: true
    handler: src/routes/users/update-one.default
    events:
      - http:
          path: users/{target}
          method: PATCH
          cors: true

  eventsCreate:
    warmup: true
    handler: src/routes/events/create.default
    events:
      - http:
          path: events
          method: POST
          cors: true

  eventsGetAll:
    warmup: false
    handler: src/routes/events/get-all.default
    events:
      - http:
          path: events
          method: GET
          cors: true

  eventsUpdateOne:
    warmup: true
    handler: src/routes/events/update-one.default
    events:
      - http:
          path: events/{target}
          method: PATCH
          cors: true

  attendanceAttend:
    warmup: true
    handler: src/routes/attendance/attend.default
    events:
      - http:
          path: attendance
          method: POST
          cors: true

  attendanceGetUser:
    warmup: false
    handler: src/routes/attendance/get-user.default
    events:
      - http:
          path: attendance/user/{target}
          method: GET
          cors: true

  attendanceGetAllByUser:
    warmup: false
    handler: src/routes/attendance/get-all-user.default
    events:
      - http:
          path: attendance/user
          method: GET
          cors: true

  attendanceGetEvent:
    warmup: false
    handler: src/routes/attendance/get-event.default
    events:
      - http:
          path: attendance/event/{target}
          method: GET
          cors: true

  attendanceGetAllByEvent:
    warmup: false
    handler: src/routes/attendance/get-all-event.default
    events:
      - http:
          path: attendance/all/event
          method: GET
          cors: true

  admin-override:
    warmup: true
    handler: src/routes/admin-override/handler.default
    events:
      - http:
          path: admin-override
          method: POST
          cors: true

custom:
  serverless-offline:
    prefix: dev
    port: 3000
    stage: dev
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  stages:
    - dev
    - test
    - v1.0

plugins:
  - serverless-webpack
  - serverless-plugin-warmup
  - serverless-offline # Should be last

