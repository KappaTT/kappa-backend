org: thetatauwebchair
app: ktt-backend

service: ktt-backend

provider:
  name: aws
  runtime: nodejs10.x
  memorySize: 256
  stage: ${opt:stage,'dev'}
  region: us-east-1 # Virginia

  environment:
    APP_STAGE: ${self:provider.stage}
    AUTH_SECRET: ${file(./serverless-config/secrets.json):AUTH_SECRET}
    ADMIN_SECRET: ${file(./serverless-config/secrets.json):ADMIN_SECRET}
    MONGODB_URI: ${file(./serverless-config/secrets.json):MONGODB_URI}

package:
  individually: true

  exclude:
    - "README.md"
    - ./*.sh
    - tests/**

functions:
  hello:
    warmup: false
    handler: src/routes/hello.handler
    events:
      - http:
          path: hello
          method: GET
          cors: true

  usersLogin:
    warmup: false
    handler: src/routes/users/login.handler
    events:
      - http:
          path: users/login
          method: POST
          cors: true

  usersGetAll:
    warmup: false
    handler: src/routes/users/get-all.handler
    events:
      - http:
          path: users
          method: GET
          cors: true

  usersUpdateOne:
    warmup: false
    handler: src/routes/users/update-one.handler
    events:
      - http:
          path: users/{target}
          method: PATCH
          cors: true

  eventsCreate:
    warmup: false
    handler: src/routes/events/create.handler
    events:
      - http:
          path: events
          method: POST
          cors: true

  eventsGetAll:
    warmup: false
    handler: src/routes/events/get-all.handler
    events:
      - http:
          path: events
          method: GET
          cors: true

  eventsUpdateOne:
    warmup: false
    handler: src/routes/events/update-one.handler
    events:
      - http:
          path: events/{target}
          method: PATCH
          cors: true

  eventsDeleteOne:
    warmup: false,
    handler: src/routes/events/delete-one.handler
    events:
      - http:
          path: events/{target}
          method: DELETE
          cors: true

  attendanceAttend:
    warmup: false
    handler: src/routes/attendance/attend.handler
    events:
      - http:
          path: attendance
          method: POST
          cors: true

  attendanceGetByUser:
    warmup: false
    handler: src/routes/attendance/get-by-user.handler
    events:
      - http:
          path: attendance/user/{target}
          method: GET
          cors: true

  attendanceGetByEvent:
    warmup: false
    handler: src/routes/attendance/get-by-event.handler
    events:
      - http:
          path: attendance/event/{target}
          method: GET
          cors: true

  attendanceExcuse:
    warmup: false
    handler: src/routes/excuse/excuse.handler
    events:
      - http:
          path: excuse
          method: POST
          cors: true

  attendanceGetExcuses:
    warmup: false
    handler: src/routes/excuse/get-all.handler
    events:
      - http:
          path: excuse
          method: GET
          cors: true

  attendanceUpdateExcuse:
    warmup: false
    handler: src/routes/excuse/update-one.handler
    events:
      - http:
          path: excuse
          method: PATCH
          cors: true

  pointsGetByUser:
    warmup: false
    handler: src/routes/points/get-by-user.handler
    events:
      - http:
          path: points/{target}
          method: GET
          cors: true

  # searchEvents:
  #   warmup: false
  #   handler: src/routes/search/search-event.handler
  #   events:
  #     - http:
  #         path: search/events
  #         method: POST
  #         cors: true

  candidatesGetAll:
    warmup: false
    handler: src/routes/candidates/get-all.handler
    events:
      - http:
          path: candidates
          method: GET
          cors: true

  candidatesCreate:
    warmup: false
    handler: src/routes/candidates/create.handler
    events:
      - http:
          path: candidates
          method: POST
          cors: true

  candidatesUpdateOne:
    warmup: false
    handler: src/routes/candidates/update-one.handler
    events:
      - http:
          path: candidates/{target}
          method: PATCH
          cors: true

  candidatesDeleteOne:
    warmup: false
    handler: src/routes/candidates/delete-one.handler
    events:
      - http:
          path: candidates/{target}
          method: DELETE
          cors: true

  sessionsGetAll:
    warmup: false
    handler: src/routes/voting/get-all-sessions.handler
    events:
      - http:
          path: sessions
          method: GET
          cors: true

  sessionsCreate:
    warmup: false
    handler: src/routes/voting/create-session.handler
    events:
      - http:
          path: sessions
          method: POST
          cors: true

  sessionsUpdateOne:
    warmup: false
    handler: src/routes/voting/update-session.handler
    events:
      - http:
          path: sessions/{target}
          method: PATCH
          cors: true

  sessionsDeleteOne:
    warmup: false
    handler: src/routes/voting/delete-session.handler
    events:
      - http:
          path: sessions/{target}
          method: DELETE
          cors: true

  sessionsStart:
    warmup: false
    handler: src/routes/voting/start-session.handler
    events:
      - http:
          path: start-session/{target}
          method: PATCH
          cors: true

  sessionsStop:
    warmup: false
    handler: src/routes/voting/stop-session.handler
    events:
      - http:
          path: stop-session/{target}
          method: PATCH
          cors: true

  getActiveCandidate:
    warmup: false
    handler: src/routes/voting/get-active-candidate.handler
    events:
      - http:
          path: active-candidate
          method: GET
          cors: true

  getActiveVotes:
    warmup: false
    handler: src/routes/voting/get-active-candidate-votes.handler
    events:
      - http:
          path: active-candidate/votes
          method: GET
          cors: true

  getCandidateVotes:
    warmup: false
    handler: src/routes/voting/get-candidate-votes.handler
    events:
      - http:
          path: votes
          method: POST
          cors: true

  submitVote:
    warmup: false
    handler: src/routes/voting/submit-vote.handler
    events:
      - http:
          path: vote
          method: POST
          cors: true

  admin-override:
    warmup: false
    handler: src/routes/admin-override/handler.handler
    events:
      - http:
          path: admin-override
          method: POST
          cors: true

  autoUpdateRoles:
    warmup: false
    handler: src/routes/auto/update-roles.handler
    events:
      - http:
          path: auto/roles
          method: POST
          cors: true

  autoUpdateUsers:
    warmup: false
    handler: src/routes/auto/update-users.handler
    events:
      - http:
          path: auto/update-users
          method: POST
          cors: true

  autoCleanUsers:
    warmup: false
    handler: src/routes/auto/clean-users.handler
    events:
      - http:
          path: auto/clean-users
          method: POST
          cors: true

  autoResetYear:
    warmup: false
    handler: src/routes/auto/reset-year.handler
    events:
      - http:
          path: auto/reset
          method: POST
          cors: true

  autoImportBulk:
    warmup: false
    handler: src/routes/auto/import-bulk.handler
    events:
      - http:
          path: auto/import-bulk
          method: POST
          cors: true

custom:
  serverless-offline:
    prefix: dev
    port: 3000
    stage: dev
  webpack:
    webpackConfig: ./webpack.config.js
    includeModules: true
  stages:
    - dev
    - test
    - v1.0

plugins:
  - serverless-webpack
  - serverless-plugin-warmup
  - serverless-offline # Should be last

